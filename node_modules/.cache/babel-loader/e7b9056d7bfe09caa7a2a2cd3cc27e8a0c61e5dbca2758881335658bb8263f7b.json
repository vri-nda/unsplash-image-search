{"ast":null,"code":"var _jsxFileName = \"/Users/vrindasharma/Desktop/unsplash-image-search/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SearchBar from './components/SearchBar';\nimport ImageGrid from './components/ImageGrid';\nimport DarkModeSwitch from './components/DarkModeSwitch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    // Add code here to set dark/light mode based on the state.\n    // You can apply CSS classes accordingly to enable dark mode.\n  }, []);\n  const searchImages = async query => {\n    setSearchQuery(query);\n    try {\n      const response = await axios.get('https://api.unsplash.com/search/photos', {\n        params: {\n          query,\n          per_page: 20\n        },\n        headers: {\n          Authorization: `Client-ID mxIVjm1S9JohgUXlEdfJgNggR5wR7_z7Jdd5ecEMC5Q`\n        }\n      });\n      setImages(response.data.results);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DarkModeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gradient-to-r from-emerald-500 to-emerald-900 py-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl text-center text-white font-semibold mb-4\",\n          children: \"Search Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: searchImages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4\",\n      children: [searchQuery && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-maroon-600 font-semibold text-lg mb-4\",\n        children: [\"Results for \", searchQuery]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageGrid, {\n        images: images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"T0O0avUXyBxyk6WHPsXAyJMi40c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","SearchBar","ImageGrid","DarkModeSwitch","jsxDEV","_jsxDEV","App","_s","images","setImages","searchQuery","setSearchQuery","searchImages","query","response","get","params","per_page","headers","Authorization","data","results","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSearch","_c","$RefreshReg$"],"sources":["/Users/vrindasharma/Desktop/unsplash-image-search/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SearchBar from './components/SearchBar';\nimport ImageGrid from './components/ImageGrid';\nimport DarkModeSwitch from './components/DarkModeSwitch';\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n\n  useEffect(() => {\n    // Add code here to set dark/light mode based on the state.\n    // You can apply CSS classes accordingly to enable dark mode.\n  }, []);\n\n  const searchImages = async (query) => {\n    setSearchQuery(query);\n    try {\n      const response = await axios.get('https://api.unsplash.com/search/photos', {\n        params: {\n          query,\n          per_page: 20,\n        },\n        headers: {\n          Authorization: `Client-ID mxIVjm1S9JohgUXlEdfJgNggR5wR7_z7Jdd5ecEMC5Q`,\n        },\n      });\n      setImages(response.data.results);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <DarkModeSwitch /> {/* Include the DarkModeSwitch component */}\n      <div className=\"bg-gradient-to-r from-emerald-500 to-emerald-900 py-10\">\n        <div className=\"container mx-auto px-4\">\n          <h1 className=\"text-3xl text-center text-white font-semibold mb-4\">Search Image</h1>\n          <SearchBar onSearch={searchImages} />\n        </div>\n      </div>\n\n      <div className=\"container mx-auto p-4\">\n      {searchQuery && (\n          <div className=\"text-center text-maroon-600 font-semibold text-lg mb-4\">\n             Results for {searchQuery}\n          </div>\n        )}\n        <ImageGrid images={images} />\n      </div>\n    </div>\n  );\n};\nexport default App;\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAGlDC,SAAS,CAAC,MAAM;IACd;IACA;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,MAAMa,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCF,cAAc,CAACE,KAAK,CAAC;IACrB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,wCAAwC,EAAE;QACzEC,MAAM,EAAE;UACNH,KAAK;UACLI,QAAQ,EAAE;QACZ,CAAC;QACDC,OAAO,EAAE;UACPC,aAAa,EAAG;QAClB;MACF,CAAC,CAAC;MACFV,SAAS,CAACK,QAAQ,CAACM,IAAI,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACF,cAAc;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACnBvB,OAAA;MAAKwB,SAAS,EAAC,wDAAwD;MAAAL,QAAA,eACrEnB,OAAA;QAAKwB,SAAS,EAAC,wBAAwB;QAAAL,QAAA,gBACrCnB,OAAA;UAAIwB,SAAS,EAAC,oDAAoD;UAAAL,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpFvB,OAAA,CAACJ,SAAS;UAAC6B,QAAQ,EAAElB;QAAa;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENvB,OAAA;MAAKwB,SAAS,EAAC,uBAAuB;MAAAL,QAAA,GACrCd,WAAW,iBACRL,OAAA;QAAKwB,SAAS,EAAC,wDAAwD;QAAAL,QAAA,GAAC,cACzD,EAACd,WAAW;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CACN,eACDvB,OAAA,CAACH,SAAS;QAACM,MAAM,EAAEA;MAAO;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhDID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAiDT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/vrindasharma/Desktop/unsplash-image-search/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SearchBar from './components/SearchBar';\nimport ImageGrid from './components/ImageGrid';\nimport ImageCard from './components/ImageCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    // Add code here to set dark/light mode based on the state.\n    // You can apply CSS classes accordingly to enable dark mode.\n  }, [darkMode]);\n  const searchImages = async query => {\n    try {\n      const response = await axios.get('https://api.unsplash.com/search/photos?page=1&query=office&client_id=mxIVjm1S9JohgUXlEdfJgNggR5wR7_z7Jdd5ecEMC5Q', {\n        params: {\n          query,\n          per_page: 20\n        },\n        headers: {\n          Authorization: `Client-ID mxIVjm1S9JohgUXlEdfJgNggR5wR7_z7Jdd5ecEMC5Q`\n        }\n      });\n      setImages(response.data.results);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: darkMode ? 'dark' : 'light',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-semibold mb-4\",\n        children: \"Unsplash Image Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mr-2\",\n          children: \"Dark Mode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: darkMode,\n          onChange: () => setDarkMode(!darkMode)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: searchImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageGrid, {\n        images: images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gS2qThFewLSrnlxl1rZ4VmXSIgQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","SearchBar","ImageGrid","ImageCard","jsxDEV","_jsxDEV","App","_s","images","setImages","darkMode","setDarkMode","searchImages","query","response","get","params","per_page","headers","Authorization","data","results","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onSearch","_c","$RefreshReg$"],"sources":["/Users/vrindasharma/Desktop/unsplash-image-search/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SearchBar from './components/SearchBar';\nimport ImageGrid from './components/ImageGrid';\nimport ImageCard from './components/ImageCard';\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    // Add code here to set dark/light mode based on the state.\n    // You can apply CSS classes accordingly to enable dark mode.\n  }, [darkMode]);\n\n  const searchImages = async (query) => {\n    try {\n      const response = await axios.get('https://api.unsplash.com/search/photos?page=1&query=office&client_id=mxIVjm1S9JohgUXlEdfJgNggR5wR7_z7Jdd5ecEMC5Q', {\n        params: {\n          query,\n          per_page: 20,\n        },\n        headers: {\n          Authorization: `Client-ID mxIVjm1S9JohgUXlEdfJgNggR5wR7_z7Jdd5ecEMC5Q`,\n        },\n      });\n      setImages(response.data.results);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className={darkMode ? 'dark' : 'light'}>\n      <div className=\"container mx-auto p-4\">\n        <h1 className=\"text-3xl font-semibold mb-4\">Unsplash Image Search</h1>\n        <div className=\"mb-4\">\n          <label className=\"mr-2\">Dark Mode:</label>\n          <input\n            type=\"checkbox\"\n            checked={darkMode}\n            onChange={() => setDarkMode(!darkMode)}\n          />\n        </div>\n        <SearchBar onSearch={searchImages} />\n        <ImageGrid images={images} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd;IACA;EAAA,CACD,EAAE,CAACW,QAAQ,CAAC,CAAC;EAEd,MAAME,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,kHAAkH,EAAE;QACnJC,MAAM,EAAE;UACNH,KAAK;UACLI,QAAQ,EAAE;QACZ,CAAC;QACDC,OAAO,EAAE;UACPC,aAAa,EAAG;QAClB;MACF,CAAC,CAAC;MACFV,SAAS,CAACK,QAAQ,CAACM,IAAI,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKmB,SAAS,EAAEd,QAAQ,GAAG,MAAM,GAAG,OAAQ;IAAAe,QAAA,eAC1CpB,OAAA;MAAKmB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpCpB,OAAA;QAAImB,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtExB,OAAA;QAAKmB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBpB,OAAA;UAAOmB,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1CxB,OAAA;UACEyB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAErB,QAAS;UAClBsB,QAAQ,EAAEA,CAAA,KAAMrB,WAAW,CAAC,CAACD,QAAQ;QAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxB,OAAA,CAACJ,SAAS;QAACgC,QAAQ,EAAErB;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCxB,OAAA,CAACH,SAAS;QAACM,MAAM,EAAEA;MAAO;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CA3CID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA6CT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}